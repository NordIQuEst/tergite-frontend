image: python:3.8

pipelines:
  pull-requests:
    '**':
      - step:
          name: check target branch
          script:
            - if [ "${BITBUCKET_PR_DESTINATION_BRANCH}" != "mss_dev2" ] && [ "${BITBUCKET_PR_DESTINATION_BRANCH}" != "main"]; then printf "not a target branch we want to check"; exit; fi
            - printf 'running pipeline'
      - step:
          name: Test
          caches:
            - pip
          script:
            - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - pytest
          services:
            - mongo
      - step:
          name: Lint
          caches:
            - pip
          script:
            - black --check .

  tags:
    "*":
      - step:
          name: check for Dockerfile
          script:
            - if [ -f Dockerfile ]; then printf "building docker image"; else printf "no Dockerfile found"; exit; fi
      - step:
          name: Build docker image
          script:
            # Add the specific env variables to env file
            - echo "BCC_MACHINE_ROOT_URL=${BCC_MACHINE_ROOT_URL}" >> .env
            - echo "DB_MACHINE_ROOT_URL=${DB_MACHINE_ROOT_URL}" >> .env
            # you could use the single private repo available to every free docker account
            # $DOCKER_USERNAME and $DOCKER_PASSWORD are a custom bitbucket secrets
            # Or better still, we could just use Github Container registries which gives us more private containers
            # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#pushing-container-images
            - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            - docker build -t tergite-mss:$BITBUCKET_TAG .
            - docker push tergite-mss:$BITBUCKET_TAG
            - docker tag tergite-mss:$BITBUCKET_TAG tergite-mss:latest
            - docker push tergite-mss:latest

definitions:
  services:
    mongo:
      image: mongo
