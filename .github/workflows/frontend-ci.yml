name: Frontend CI
# the CI for the whole front end monorepo

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

  workflow_dispatch:
    inputs:
      job:
        description: "Job to run"
        required: true
        default: "e2e"
        type: choice
        options:
          - e2e

jobs:
  e2e:
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/heads/main') || 
      startsWith(github.ref, 'refs/tags/') || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'e2e')

    steps:
      - uses: actions/checkout@v4
      - name: Set up Nodejs 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install OpenBlas for scipy if no wheels
        run: sudo apt-get install -y libopenblas-dev
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        with:
          version: "latest"
      - name: Run end-to-end-tests
        env:
          DEBUG: ${{ vars.DEBUG || 'false' }}
          BACKEND_REPO: https://github.com/${{ github.repository_owner }}/tergite-backend.git
          BACKEND_BRANCH: ${{ github.ref_name }}
        run: ./e2e_test.sh

  # TODO: Add a stage for testing the docker compose loading
  upstream:
    name: Update upstream
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && vars.SHOULD_PUSH_UPSTREAM == 'true' }}
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Push upstream
        run: |
          if [ "${{ github.event_name }}" != "push" ] || [ "${{ vars.SHOULD_PUSH_UPSTREAM }}" != 'true' ]; then printf "upstream not enabled"; exit; fi
          git config user.email ${{ secrets.UPSTREAM_USER }}
          git pull -r ${{ secrets.UPSTREAM_REPO }} ${{ github.ref_name }} || echo "${{ github.ref_name }} does not exist"
          git push ${{ secrets.UPSTREAM_REPO }} ${{ github.ref_name }} || echo "${{ github.ref_name }} already exists"

# FIXME: Add a smoke test for testing building with docker compose
