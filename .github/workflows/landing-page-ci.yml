name: Landing Page CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - "apps/tergite-landing-page/**"
  pull_request:
    paths:
      - "apps/tergite-landing-page/**"

jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node18.12.0-chrome107
      options: --user 1001
    strategy:
      matrix:
        node-version:
          - "18.16"
          - "18.17"
          - "18.18"
          - "18.19"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Lint and test
        run: |
          cd apps/tergite-landing-page
          npm ci
          npm run lint
          npm run e2e

  release-staging:
    name: Release Staging
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') && vars.SHOULD_PUBLISH_TO_STAGING == 'true' }}
    needs: tests
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platform: ${{ vars.QEMU_PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to staging registry
        uses: docker/login-action@v3
        with:
          # using the self-hosted container registry provided by https://github.com/tergite/tergite-registry
          # its domain is saved in STAGING_CONTAINER_REGISTRY workspace secret variable in format domain.com:port
          # STAGING_DOCKER_USERNAME and STAGING_DOCKER_PASSWORD are also workspace secret variables
          registry: ${{ secrets.STAGING_CONTAINER_REGISTRY }}
          username: ${{ secrets.STAGING_DOCKER_USERNAME }}
          password: ${{ secrets.STAGING_DOCKER_PASSWORD }}

      - name: Set up Nodejs 18.16
        uses: actions/setup-node@v4
        with:
          node-version: "18.16"

      - name: Build app
        run: |
          cd apps/tergite-landing-page
          npm ci
          NEXT_TELEMETRY_DISABLED=1 npm run build

      - name: Publish
        run: |
          docker buildx create --name multi-platform-builder --bootstrap --use
          docker buildx build --platform ${{ vars.DOCKER_IMAGE_PLATFORMS }} -t ${{ secrets.STAGING_CONTAINER_REGISTRY }}/tergite-landing-page:${{ github.ref_name }} --push .

  release-production:
    name: Release Production
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') && vars.SHOULD_PUBLISH_TO_PROD == 'true' }}
    needs: tests
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platform: ${{ vars.QEMU_PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to staging registry
        uses: docker/login-action@v3
        with:
          # using the self-hosted container registry provided by https://github.com/tergite/tergite-registry
          # its domain is saved in CONTAINER_REGISTRY workspace secret variable in format domain.com:port
          # STAGING_DOCKER_USERNAME and DOCKER_PASSWORD are also workspace secret variables
          registry: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Nodejs 18.16
        uses: actions/setup-node@v4
        with:
          node-version: "18.16"

      - name: Build app
        run: |
          cd apps/tergite-landing-page
          npm ci
          NEXT_TELEMETRY_DISABLED=1 npm run build

      - name: Publish
        run: |
          docker buildx create --name multi-platform-builder --bootstrap --use
          docker buildx build --platform ${{ vars.DOCKER_IMAGE_PLATFORMS }} -t ${{ secrets.CONTAINER_REGISTRY }}/tergite-landing-page:${{ github.ref_name }} --push .
