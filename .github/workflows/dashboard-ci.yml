name: Dashboard CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - "apps/tergite-dashboard/**"
  pull_request:
    paths:
      - "apps/tergite-dashboard/**"
concurrency:
  # cancel any previous run on this branch or tag that is still in progress
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Nodejs 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Lint
        run: |
          cd apps/tergite-dashboard
          npm ci
          npm run lint
      - name: Component tests
        run: |
          cd apps/tergite-dashboard
          npm run test
      - name: End-to-end tests
        run: |
          cd apps/tergite-dashboard
          echo "TEST_THRESHOLD=${{ vars.TEST_THRESHOLD }}" >> .env.test
          npm run e2e

  release-staging:
    name: Release Staging
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') && vars.SHOULD_PUBLISH_TO_STAGING == 'true' }}
    needs: tests
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platform: ${{ vars.QEMU_PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to staging registry
        uses: docker/login-action@v3
        with:
          # using the self-hosted container registry provided by https://github.com/tergite/tergite-registry
          # its domain is saved in STAGING_CONTAINER_REGISTRY workspace secret variable in format domain.com:port
          # STAGING_DOCKER_USERNAME and STAGING_DOCKER_PASSWORD are also workspace secret variables
          registry: ${{ secrets.STAGING_CONTAINER_REGISTRY }}
          username: ${{ secrets.STAGING_DOCKER_USERNAME }}
          password: ${{ secrets.STAGING_DOCKER_PASSWORD }}

      - name: Publish
        run: |
          cd apps/tergite-dashboard
          docker buildx create --name multi-platform-builder --bootstrap --use
          docker buildx build --platform ${{ vars.DOCKER_IMAGE_PLATFORMS }} -t ${{ secrets.STAGING_CONTAINER_REGISTRY }}/tergite-dashboard:${{ github.ref_name }} --push .

  release-production:
    name: Release Production
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') && vars.SHOULD_PUBLISH_TO_PROD == 'true' }}
    needs: tests
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platform: ${{ vars.QEMU_PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to staging registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish
        run: |
          cd apps/tergite-dashboard
          docker buildx create --name multi-platform-builder --bootstrap --use
          docker buildx build --platform ${{ vars.DOCKER_IMAGE_PLATFORMS }} -t tergite/tergite-dashboard:${{ github.ref_name }} --push .
